from flask import Flask, render_template,request
from feature_Extraction import create_vector_single,extract_features
import os
import pickle



 
app = Flask(__name__)
app.config['UPLOAD_FOLDER'] = "uploads/"

@app.route('/predict', methods=['POST'])
def analyze():
	if request.method=='POST':
		 f = request.files.get('file', None)
		 if f:
		 	fp = os.path.join(app.config['UPLOAD_FOLDER'], f.filename)
		 	f.save(fp)
		 	features = extract_features(fp)
		 	feature_vector = create_vector_single(features)
		 	arr=[]
		 	arr.append(feature_vector)
		 	mod1=pickle.load(open("feature_model.p", "rb"))
		 	mod2=pickle.load(open("kfold_train_data.p","rb"))
		 	mod3=pickle.load(open("decision.p","rb"))
		 	mod4=pickle.load(open("random_forest.p","rb"))
		 	mod5=pickle.load(open("xgb.p", "rb"))
		 	mod6=pickle.load(open("pca_decision.p","rb"))
		 	mod7=pickle.load(open("pca_ran.p","rb"))
		 	feature_vector_new=mod1.transform(arr)
		 	feature_vector_dec=mod6.transform(feature_vector_new)
		 	feature_vector_ran=mod7.transform(feature_vector_new)
		 	label={}
		 	result=mod2.predict(feature_vector_new)
		 	if int(result[0])==1:
		 		label["svm"]="Malware"
		 	else:
		 		label["svm"]="Goodware"

		 	result=mod5.predict(feature_vector_new)
		 	if int(result[0])==1:
		 		label["xgb"]="Malware"
		 	else:
		 		label["xgb"]="Goodware"

		 	result=mod4.predict(feature_vector_ran)
		 	if int(result[0])==1:
		 		label["random_forest"]="Malware"
		 	else:
		 		label["random_forest"]="Goodware"
		 	result=mod3.predict(feature_vector_dec)
		 	if int(result[0])==1:
		 		label["Decision_tree"]="Malware"
		 	else:
		 		label["Decision_tree"]="Goodware"
		 else:
		 	label=None
		 	 


	return render_template("index.html",label=label)






@app.route('/')
def index():
	return render_template("index.html")

@app.route('/result')
def res():
	return render_template("result.html")





if __name__=='__main__':
	app.run(debug=True)

 
	
