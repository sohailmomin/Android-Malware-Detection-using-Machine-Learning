from sklearn.tree import DecisionTreeClassifier
from sklearn.model_selection import KFold
from sklearn.model_selection import cross_val_score
import random
import pickle
from sklearn.decomposition import PCA


clf = DecisionTreeClassifier(random_state=0)


feature_vector = []

with open('final_data.csv','r') as fp:
	for i,line in enumerate(fp):
		if i == 0:
			pass
		else:
			feature_vector.append([int(x.strip()) for x in line.split(',')])

random.shuffle(feature_vector)




X = [x[:-1] for x in feature_vector]
Y = [y[-1] for y in feature_vector]


pca = PCA(n_components = 5)
X = [x[:-1] for x in feature_vector]
Y = [y[-1] for y in feature_vector]
X = pca.fit_transform(X)
pickle.dump(pca, open("pca_decision.p", "wb"))




k_fold = KFold(10)
results = []
i = 1
for train, test in k_fold.split(X):
	x = [X[ind] for ind in train]
	y = [Y[ind] for ind in train]
	x_test = [X[ind] for ind in test]
	y_test = [Y[ind] for ind in test]

	clf.fit(x,y)
	score = clf.score(x_test,y_test)
	results.append(score)
	print ("[fold {0}]  score: {1:.5f}".format(i, score))
	i+=1
print ('Mean Score: {}'.format(sum(results)/len(results)))





print ('Mean Score: {}'.format(sum(results)/len(results)))
pickle.dump(clf, open("decision.p", "wb"))
