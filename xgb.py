from xgboost import XGBClassifier
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score
from sklearn.model_selection import KFold
import numpy as np
from sklearn.metrics import accuracy_score
from sklearn.decomposition import PCA
import pickle


model = XGBClassifier()

feature_vector = []

with open('final_data.csv','r') as fp:
	for i,line in enumerate(fp):
		if i == 0:
			pass
		else:
			feature_vector.append([int(x.strip()) for x in line.split(',')])


X = [x[:-1] for x in feature_vector]
Y = [y[-1] for y in feature_vector]

'''pca = PCA(n_components = None)
X = [x[:-1] for x in feature_vector]
Y = [y[-1] for y in feature_vector]
X = pca.fit_transform(X)'''

X_train, X_test, y_train, y_test = train_test_split(X, Y, test_size=0.2, random_state=0)
X_train=np.array(X_train)
y_train=np.array(y_train)
model.fit(X_train,y_train)

 

from sklearn.model_selection import cross_val_score
accuracies = cross_val_score(estimator = model, X = X_train, y = y_train, cv = 10)
print(accuracies.mean())
print(accuracies.std())
pickle.dump(model, open("xgb.p", "wb"))




